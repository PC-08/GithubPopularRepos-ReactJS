{"version":3,"sources":["components/LanguageFilterItem/index.js","components/RepositoryItem/index.js","components/GithubPopularRepos/index.js","App.js","index.js"],"names":["LanguageFilterItem","props","languageFiltersData","seletedFilter","isActive","id","language","activeCN","_jsx","children","onClick","className","concat","type","RepositoryItem","repoData","startsCount","name","issuesCount","avatarUrl","forksCount","_jsxs","src","alt","apiStatusConstants","GithubPopularRepos","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","state","apiStatus","activeOption","reposArray","getRepos","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","formattedData","wrap","_context","prev","next","setState","fetch","sent","json","popular_repos","map","eachRep","avatar_url","forks_count","issues_count","stars_count","ok","console","log","stop","getBasedOnResult","renderSuccessView","renderFailureView","renderLoadingView","Loader","color","height","width","_inherits","_createClass","key","value","this","_this2","eachLan","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"4VA0BeA,EAvBY,SAAAC,GACzB,IAAOC,EAAgDD,EAAhDC,oBAAqBC,EAA2BF,EAA3BE,cAAeC,EAAYH,EAAZG,SACpCC,EAAgBH,EAAhBG,GAAIC,EAAYJ,EAAZI,SAMLC,EAAWH,EAAW,SAAW,GAEvC,OACEI,cAAA,MAAAC,SACED,cAAA,UACEE,QATgB,WACpBP,EAAcE,EAChB,EAQMM,UAAS,mBAAAC,OAAqBL,GAC9BM,KAAK,SAAQJ,SAEZH,KAIT,ECgBeQ,G,MArCQ,SAAAb,GACrB,IAAOc,EAAYd,EAAZc,SAEAC,EAAyDD,EAAzDC,YAAaC,EAA4CF,EAA5CE,KAAMC,EAAsCH,EAAtCG,YAAaC,EAAyBJ,EAAzBI,UAAWC,EAAcL,EAAdK,WAElD,OACEC,eAAA,MAAIV,UAAU,UAASF,SAAA,CACrBD,cAAA,OAAKG,UAAU,UAAUW,IAAKH,EAAWI,IAAKN,IAC9CT,cAAA,MAAIG,UAAU,WAAUF,SAAEQ,IAC1BI,eAAA,OAAKV,UAAU,UAASF,SAAA,CACtBD,cAAA,OACEc,IAAI,gEACJC,IAAI,QACJZ,UAAU,YAEZU,eAAA,KAAGV,UAAU,UAASF,SAAA,CAAEO,EAAY,eAEtCK,eAAA,OAAKV,UAAU,UAASF,SAAA,CACtBD,cAAA,OACEc,IAAI,+DACJC,IAAI,QACJZ,UAAU,YAEZU,eAAA,KAAGV,UAAU,UAASF,SAAA,CAAEW,EAAW,eAErCC,eAAA,OAAKV,UAAU,UAASF,SAAA,CACtBD,cAAA,OACEc,IAAI,gEACJC,IAAI,cACJZ,UAAU,YAEZU,eAAA,KAAGV,UAAU,UAASF,SAAA,CAAES,EAAY,uBAI5C,GC9BMhB,G,MAAsB,CAC1B,CAACG,GAAI,MAAOC,SAAU,OACtB,CAACD,GAAI,aAAcC,SAAU,cAC7B,CAACD,GAAI,OAAQC,SAAU,QACvB,CAACD,GAAI,OAAQC,SAAU,QACvB,CAACD,GAAI,MAAOC,SAAU,SAGlBkB,EACK,UADLA,EAEK,UAFLA,EAGK,UAHLA,EAIK,UAKLC,EAAkB,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,YAAA,KAAAH,GAAA,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAsFrB,OAtFqBP,EAAAQ,YAAA,KAAAV,EAAA,GAAAb,OAAAoB,KACtBI,MAAQ,CACNC,UAAWb,EACXc,aAAcpC,EAAoB,GAAGG,GACrCkC,WAAY,WACbZ,EAMDa,SAAQC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAN,EAAAO,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,cAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI8D,OAHvEzB,EAAK0B,SAAS,CAAChB,UAAWb,IAEnBc,EAAgBX,EAAKS,MAArBE,aACDO,EAAG,+CAAAjC,OAAkD0B,GAAYY,EAAAE,KAAA,EAEhDE,MAAMT,GAAI,OAAnB,OAARC,EAAQI,EAAAK,KAAAL,EAAAE,KAAA,EAEKN,EAASU,OAAM,OAA5BT,EAAIG,EAAAK,KAEJP,EAAgBD,EAAKU,cAAcC,KAAI,SAAAC,GAAO,MAAK,CACvDxC,UAAWwC,EAAQC,WACnBxC,WAAYuC,EAAQE,YACpBxD,GAAIsD,EAAQtD,GACZa,YAAayC,EAAQG,aACrB7C,KAAM0C,EAAQ1C,KACdD,YAAa2C,EAAQI,YACtB,IAEGjB,EAASkB,GACXrC,EAAK0B,SAAS,CACZhB,UAAWb,EACXe,WAAYS,IAGdrB,EAAK0B,SAAS,CACZhB,UAAWb,IAIfyC,QAAQC,IAAInB,GAAK,yBAAAG,EAAAiB,OAAA,GAAAvB,EAAA,KAClBjB,EAEDxB,cAAgB,SAAAE,GACdsB,EAAK0B,SAAS,CAACf,aAAcjC,GAAKsB,EAAKa,SACzC,EAACb,EAEDyC,iBAAmB,WAEjB,OADoBzC,EAAKS,MAAlBC,WAEL,KAAKb,EACH,OAAOG,EAAK0C,oBACd,KAAK7C,EACH,OAAOG,EAAK2C,oBACd,KAAK9C,EACH,OAAOG,EAAK4C,oBACd,QACE,OAAO,KAEb,EAAC5C,EAED4C,kBAAoB,kBAClB/D,cAAA,OAAK,cAAY,SAAQC,SACvBD,cAACgE,IAAM,CAAC3D,KAAK,YAAY4D,MAAM,UAAUC,OAAQ,GAAIC,MAAO,MACxD,EACPhD,EAED2C,kBAAoB,kBAClB9D,cAAA,OAAAC,SACED,cAAA,OACEe,IAAI,eACJD,IAAI,mEAEF,EACPK,EAED0C,kBAAoB,WAClB,IAAO9B,EAAcZ,EAAKS,MAAnBG,WACP,OACE/B,cAAA,MAAIG,UAAU,SAAQF,SACnB8B,EAAWmB,KAAI,SAAAC,GAAO,OACrBnD,cAACM,EAAc,CAAkBC,SAAU4C,GAAtBA,EAAQtD,GAAyB,KAI9D,EAACsB,CAAA,QAAAiD,YAAAnD,EAAAC,GAAAmD,YAAApD,EAAA,EAAAqD,IAAA,oBAAAC,MA/ED,WACEC,KAAKxC,UACP,GAAC,CAAAsC,IAAA,SAAAC,MA+ED,WAAU,IAADE,EAAA,KACA3C,EAAgB0C,KAAK5C,MAArBE,aACP,OACEjB,eAAA,OAAKV,UAAU,KAAIF,SAAA,CACjBD,cAAA,MAAIG,UAAU,OAAMF,SAAC,YACrBD,cAAA,MAAIG,UAAU,eAAcF,SACzBP,EAAoBwD,KAAI,SAAAwB,GAAO,OAC9B1E,cAACR,EAAkB,CAEjBE,oBAAqBgF,EACrB/E,cAAe8E,EAAK9E,cACpBC,SAAU8E,EAAQ7E,KAAOiC,GAHpB4C,EAAQ7E,GAIb,MAGNG,cAAA,OAAKG,UAAU,SAAQF,SAAEuE,KAAKZ,uBAGpC,IAAC,CA1GqB,CAASe,aA6GlB1D,IChIA2D,EAFH,WAAH,OAAS5E,cAACiB,EAAkB,GAAG,ECAxC4D,IAASC,OACP9E,cAAC+E,IAAMC,WAAU,CAAA/E,SACfD,cAAC4E,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.7ffa437c.chunk.js","sourcesContent":["// Write your code here\nimport './index.css'\n\nconst LanguageFilterItem = props => {\n  const {languageFiltersData, seletedFilter, isActive} = props\n  const {id, language} = languageFiltersData\n\n  const onClickFilter = () => {\n    seletedFilter(id)\n  }\n\n  const activeCN = isActive ? 'active' : ''\n\n  return (\n    <li>\n      <button\n        onClick={onClickFilter}\n        className={`filter-data-btn ${activeCN}`}\n        type=\"button\"\n      >\n        {language}\n      </button>\n    </li>\n  )\n}\n\nexport default LanguageFilterItem\n","// Write your code here\nimport './index.css'\n\nconst RepositoryItem = props => {\n  const {repoData} = props\n\n  const {startsCount, name, issuesCount, avatarUrl, forksCount} = repoData\n\n  return (\n    <li className=\"ri-card\">\n      <img className=\"ri-logo\" src={avatarUrl} alt={name} />\n      <h1 className=\"ri-title\">{name}</h1>\n      <div className=\"ri-info\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/stars-count-img.png \"\n          alt=\"stars\"\n          className=\"ri-indi\"\n        />\n        <p className=\"ri-para\">{startsCount} stars</p>\n      </div>\n      <div className=\"ri-info\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/forks-count-img.png\"\n          alt=\"forks\"\n          className=\"ri-indi\"\n        />\n        <p className=\"ri-para\">{forksCount} forks</p>\n      </div>\n      <div className=\"ri-info\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/issues-count-img.png\"\n          alt=\"open issues\"\n          className=\"ri-indi\"\n        />\n        <p className=\"ri-para\">{issuesCount} open issues</p>\n      </div>\n    </li>\n  )\n}\n\nexport default RepositoryItem\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport LanguageFilterItem from '../LanguageFilterItem'\nimport RepositoryItem from '../RepositoryItem'\n\nimport './index.css'\n\nconst languageFiltersData = [\n  {id: 'ALL', language: 'All'},\n  {id: 'JAVASCRIPT', language: 'Javascript'},\n  {id: 'RUBY', language: 'Ruby'},\n  {id: 'JAVA', language: 'Java'},\n  {id: 'CSS', language: 'CSS'},\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loading: 'LOADING',\n}\n\n// Write your code here\n\nclass GithubPopularRepos extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    activeOption: languageFiltersData[0].id,\n    reposArray: 'initial',\n  }\n\n  componentDidMount() {\n    this.getRepos()\n  }\n\n  getRepos = async () => {\n    this.setState({apiStatus: apiStatusConstants.loading})\n\n    const {activeOption} = this.state\n    const url = `https://apis.ccbp.in/popular-repos?language=${activeOption}`\n\n    const response = await fetch(url)\n\n    const data = await response.json()\n\n    const formattedData = data.popular_repos.map(eachRep => ({\n      avatarUrl: eachRep.avatar_url,\n      forksCount: eachRep.forks_count,\n      id: eachRep.id,\n      issuesCount: eachRep.issues_count,\n      name: eachRep.name,\n      startsCount: eachRep.stars_count,\n    }))\n\n    if (response.ok) {\n      this.setState({\n        apiStatus: apiStatusConstants.success,\n        reposArray: formattedData,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n\n    console.log(data)\n  }\n\n  seletedFilter = id => {\n    this.setState({activeOption: id}, this.getRepos)\n  }\n\n  getBasedOnResult = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.loading:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  renderLoadingView = () => (\n    <div data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0284c7\" height={80} width={80} />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div>\n      <img\n        alt=\"failure view\"\n        src=\"https://assets.ccbp.in/frontend/react-js/api-failure-view.png\"\n      />\n    </div>\n  )\n\n  renderSuccessView = () => {\n    const {reposArray} = this.state\n    return (\n      <ul className=\"ri-con\">\n        {reposArray.map(eachRep => (\n          <RepositoryItem key={eachRep.id} repoData={eachRep} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {activeOption} = this.state\n    return (\n      <div className=\"bg\">\n        <h1 className=\"head\">Popular</h1>\n        <ul className=\"filters-list\">\n          {languageFiltersData.map(eachLan => (\n            <LanguageFilterItem\n              key={eachLan.id}\n              languageFiltersData={eachLan}\n              seletedFilter={this.seletedFilter}\n              isActive={eachLan.id === activeOption}\n            />\n          ))}\n        </ul>\n        <div className=\"bottom\">{this.getBasedOnResult()}</div>\n      </div>\n    )\n  }\n}\n\nexport default GithubPopularRepos\n","import './App.css'\n\nimport GithubPopularRepos from './components/GithubPopularRepos'\n\nconst App = () => <GithubPopularRepos />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}